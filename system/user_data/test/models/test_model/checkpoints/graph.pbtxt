node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2520
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2520
          }
        }
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_151.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_213.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_46.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_107.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_46.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_31.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_213.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_232.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_58.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_13.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_156.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_136.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_89.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_286.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_129.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_244.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_286.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_6.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_84.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_157.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_151.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_87.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_294.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_206.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_247.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_157.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_156.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_89.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_64.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_64.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_175.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_27.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_257.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_124.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_54.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_34.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_32.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_18.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_175.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_11.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_299.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_227.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_258.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_63.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_88.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_206.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_132.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_153.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_1.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_254.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_6.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_237.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_34.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_124.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_63.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_204.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_132.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_32.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_140.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_280.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_203.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_238.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_46.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_227.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_110.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_257.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_239.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_257.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_135.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_5.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_227.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_132.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_18.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_69.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_182.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_135.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_102.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_58.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_237.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_227.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_175.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_38.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_6.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_135.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_294.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_132.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_105.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_106.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_258.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_286.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_13.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_41.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_242.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_238.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_238.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_104.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_169.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_136.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_46.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_89.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_153.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_38.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_244.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_299.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_299.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_1.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_204.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_176.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_242.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_123.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_286.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_124.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_18.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_110.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_177.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_151.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_144.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_1.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_195.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_242.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_140.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_206.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_208.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_123.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_140.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_144.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_129.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_58.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_238.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_110.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_294.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_88.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_177.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_237.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_32.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_155.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_27.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_41.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_252.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_213.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_28.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_28.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_11.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_213.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_158.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_229.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_106.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_257.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_58.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_55.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_140.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_157.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_203.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_232.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_21.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_204.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_254.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_195.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_254.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_107.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_106.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_280.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_5.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_1.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_55.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_87.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_89.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_87.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_239.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_6.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_157.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_140.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_169.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_156.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_105.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_34.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_203.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_136.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_32.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_31.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_124.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_21.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_273.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_105.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_195.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_38.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_86.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_13.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_38.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_156.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_280.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_107.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_59.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_18.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_204.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_46.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_129.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_177.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_247.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_104.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_229.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_285.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_153.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_176.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_88.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_144.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_86.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_38.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_254.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_203.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_273.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_238.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_87.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_102.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_18.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_132.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_239.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_69.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_158.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_129.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_107.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_87.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_122.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_92.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_11.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_158.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_182.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_229.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_244.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_92.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_69.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_92.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_105.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_286.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_110.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_106.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_273.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_31.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_41.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_27.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_28.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_123.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_258.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_107.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_13.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_129.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_69.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_55.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_92.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_34.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_64.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_86.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_58.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_31.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_136.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_123.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_176.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_55.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_203.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_104.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_177.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_242.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_6.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_110.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_213.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_69.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_59.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_38.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_286.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_190.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_63.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_122.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_238.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_7.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_64.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_169.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_244.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_237.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_13.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_252.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_122.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_273.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_64.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_102.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_175.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_59.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_299.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_1.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_5.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_244.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_18.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_232.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_41.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_280.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_54.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_5.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_11.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_151.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_237.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_132.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_195.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_41.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_106.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_206.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_31.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_144.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_55.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_46.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_227.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_182.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_92.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_157.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_195.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_175.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_158.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_237.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_182.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_136.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_102.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_11.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_257.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_170.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_155.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_247.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_158.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_169.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_86.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_247.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_258.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_273.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_170.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_69.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_54.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_203.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_89.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_258.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_92.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_22.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_46.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_11.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_166.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_280.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_55.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_41.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_175.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_257.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_195.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_144.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_88.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_156.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_153.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_252.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_229.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_4.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_84.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_244.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_213.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_169.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_102.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_258.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_227.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_153.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_106.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_170.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_258.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_129.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_123.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_232.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_136.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_122.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_21.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_135.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_177.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_249.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_124.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_239.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_136.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_59.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_179.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_195.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_158.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_34.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_144.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_176.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_252.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_239.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_280.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_123.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_204.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_247.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_7.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_296.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_204.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_105.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_86.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_6.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_76.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_110.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_114.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_285.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_206.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_54.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_104.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_234.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_165.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_121.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_155.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_18.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_172.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_73.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_153.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_290.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_26.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_108.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_242.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_126.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_122.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_59.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_54.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_260.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_41.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_102.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_104.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_140.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_34.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_232.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_223.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_84.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_252.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_176.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_132.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_66.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_86.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_176.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_38.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_104.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_174.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_257.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_21.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_151.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_1.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_74.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_53.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_39.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_177.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_254.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_299.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_222.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_267.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_88.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_229.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_204.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_294.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_155.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_5.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_285.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_252.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_289.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_64.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_206.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_138.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_21.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_157.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_259.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_10.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_59.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_265.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_153.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_183.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_117.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_178.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_140.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_155.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_199.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_63.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_291.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_237.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_102.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_221.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_43.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_218.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_285.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_17.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_63.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_25.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_72.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_89.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_191.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_6.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_175.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_163.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_285.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_103.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_219.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_276.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_109.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_293.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_273.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_54.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_21.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_135.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_79.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_88.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_273.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_118.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_70.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_240.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_255.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_262.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_31.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_56.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_294.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_248.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_75.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_169.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_13.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_157.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_124.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_202.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_214.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_158.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_247.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_201.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_254.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_228.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_246.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_92.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_208.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_69.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_159.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_184.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_285.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_220.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_78.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_104.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_93.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_170.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_129.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_283.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_85.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_189.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_30.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_299.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_143.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_47.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_247.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_55.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_215.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_60.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_24.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_134.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_139.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_196.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_251.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_254.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_209.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_212.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_52.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_87.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_235.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_51.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_15.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_150.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_35.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_261.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_207.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_264.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_48.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_149.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_95.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_32.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_299.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_122.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_84.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_266.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_229.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_23.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_83.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_294.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_116.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_115.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_155.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_71.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_238.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_268.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_244.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_242.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_203.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_187.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_146.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_226.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_11.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_294.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_236.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_44.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_145.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_225.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_176.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_161.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_127.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_5.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_200.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_278.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_160.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_91.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_80.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_239.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_97.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_37.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_245.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_131.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_169.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_233.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_14.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_96.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_256.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_124.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_111.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_94.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_250.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_173.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_3.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_67.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_36.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_107.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_297.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_194.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_113.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_2.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_274.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_77.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_122.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_156.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_54.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_282.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_162.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_186.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_81.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_148.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_192.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_269.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_49.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_298.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_232.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_181.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_281.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_213.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_50.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_288.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_28.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_292.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_285.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_125.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_284.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_182.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_180.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_29.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_120.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_133.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_164.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_33.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_107.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_64.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_147.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_9.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_100.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_177.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_20.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_152.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_142.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_217.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_300.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_82.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_119.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_211.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_27.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_253.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_61.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_270.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_271.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_193.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_277.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_171.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_42.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_141.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_128.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_8.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_272.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_137.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_279.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_87.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_198.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_90.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_45.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_40.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_205.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_231.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_68.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_239.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_224.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_12.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_86.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_101.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_144.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_287.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_62.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_130.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_27.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_59.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_230.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_185.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_275.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_167.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_170.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_263.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_65.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_112.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_216.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_58.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_241.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_16.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_243.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_188.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\In\\In_13.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_154.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_57.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Sc\\Sc_19.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_210.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_98.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_197.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_168.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Pa\\Pa_242.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\RS\\RS_99.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_295.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\Cr\\Cr_252.jpg"
        string_val: "E:\\PythonProject\\System\\system\\user_data\\test\\datasets\\NEU-CLS\\train\\PS\\PS_286.jpg"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2520
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2520
          }
        }
        string_val: "Cr"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Cr"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "In"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "PS"
        string_val: "In"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "In"
        string_val: "Cr"
        string_val: "PS"
        string_val: "In"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "Pa"
        string_val: "In"
        string_val: "Cr"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "In"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "Cr"
        string_val: "PS"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "RS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Cr"
        string_val: "In"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "PS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Pa"
        string_val: "Pa"
        string_val: "RS"
        string_val: "In"
        string_val: "RS"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "RS"
        string_val: "In"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Cr"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Sc"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Sc"
        string_val: "PS"
        string_val: "Sc"
        string_val: "In"
        string_val: "Pa"
        string_val: "In"
        string_val: "RS"
        string_val: "RS"
        string_val: "Cr"
        string_val: "Pa"
        string_val: "In"
        string_val: "In"
        string_val: "PS"
        string_val: "RS"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "In"
        string_val: "PS"
        string_val: "Sc"
        string_val: "Sc"
        string_val: "RS"
        string_val: "RS"
        string_val: "Pa"
        string_val: "PS"
        string_val: "Pa"
        string_val: "RS"
        string_val: "PS"
        string_val: "Cr"
        string_val: "PS"
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "Const"
  input: "Const_1"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2520
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "TensorSliceDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 100
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
}
node {
  name: "MapDataset"
  op: "MapDataset"
  input: "RepeatDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_Image._parse_function_42"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "MapDataset_1"
  op: "MapDataset"
  input: "MapDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_Image._parse_augmentation_options_49"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "MapDataset_2"
  op: "MapDataset"
  input: "MapDataset_1"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_Image._norm_function_58"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "MapDataset_2"
  input: "batch_size"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "BatchDatasetV2"
  input: "buffer_size_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "optimizations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "map_and_batch_fusion"
        string_val: "noop_elimination"
        string_val: "shuffle_and_repeat_fusion"
      }
    }
  }
}
node {
  name: "OptimizeDataset"
  op: "OptimizeDataset"
  input: "PrefetchDataset"
  input: "optimizations"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "optimization_configs"
    value {
      list {
        s: "map_vectorization:use_choose_fastest:false"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
}
node {
  name: "ModelDataset"
  op: "ModelDataset"
  input: "OptimizeDataset"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "algorithm"
    value {
      i: 0
    }
  }
  attr {
    key: "cpu_budget"
    value {
      i: 0
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
}
node {
  name: "IteratorV2"
  op: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "ModelDataset"
  input: "IteratorV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
}
node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3789490759372711
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block1_conv1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block1_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block1_conv1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block1_conv1/kernel/Initializer/truncated_normal/mul"
  input: "block1_conv1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/kernel"
    }
  }
}
node {
  name: "block1_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel"
  input: "block1_conv1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/bias"
    }
  }
}
node {
  name: "block1_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/bias"
  input: "block1_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/Conv2D"
  op: "Conv2D"
  input: "input_1"
  input: "block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block1_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block1_conv1/Conv2D"
  input: "block1_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1_conv1/Relu"
  op: "Relu"
  input: "block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block1_conv2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block1_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block1_conv2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block1_conv2/kernel/Initializer/truncated_normal/mul"
  input: "block1_conv2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/kernel"
    }
  }
}
node {
  name: "block1_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel"
  input: "block1_conv2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/bias"
    }
  }
}
node {
  name: "block1_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/bias"
  input: "block1_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/Conv2D"
  op: "Conv2D"
  input: "block1_conv1/Relu"
  input: "block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block1_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block1_conv2/Conv2D"
  input: "block1_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1_conv2/Relu"
  op: "Relu"
  input: "block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_pool/MaxPool"
  op: "MaxPool"
  input: "block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block2_conv1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block2_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block2_conv1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block2_conv1/kernel/Initializer/truncated_normal/mul"
  input: "block2_conv1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/kernel"
    }
  }
}
node {
  name: "block2_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel"
  input: "block2_conv1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/bias"
    }
  }
}
node {
  name: "block2_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/bias"
  input: "block2_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/Conv2D"
  op: "Conv2D"
  input: "block1_pool/MaxPool"
  input: "block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block2_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block2_conv1/Conv2D"
  input: "block2_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block2_conv1/Relu"
  op: "Relu"
  input: "block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block2_conv2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block2_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block2_conv2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block2_conv2/kernel/Initializer/truncated_normal/mul"
  input: "block2_conv2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/kernel"
    }
  }
}
node {
  name: "block2_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel"
  input: "block2_conv2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/bias"
    }
  }
}
node {
  name: "block2_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/bias"
  input: "block2_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/Conv2D"
  op: "Conv2D"
  input: "block2_conv1/Relu"
  input: "block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block2_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block2_conv2/Conv2D"
  input: "block2_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block2_conv2/Relu"
  op: "Relu"
  input: "block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_pool/MaxPool"
  op: "MaxPool"
  input: "block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block3_conv1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block3_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block3_conv1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block3_conv1/kernel/Initializer/truncated_normal/mul"
  input: "block3_conv1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/kernel"
    }
  }
}
node {
  name: "block3_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel"
  input: "block3_conv1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/bias"
    }
  }
}
node {
  name: "block3_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/bias"
  input: "block3_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block3_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/Conv2D"
  op: "Conv2D"
  input: "block2_pool/MaxPool"
  input: "block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv1/Conv2D"
  input: "block3_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv1/Relu"
  op: "Relu"
  input: "block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023684317246079445
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block3_conv2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block3_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block3_conv2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block3_conv2/kernel/Initializer/truncated_normal/mul"
  input: "block3_conv2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/kernel"
    }
  }
}
node {
  name: "block3_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel"
  input: "block3_conv2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/bias"
    }
  }
}
node {
  name: "block3_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/bias"
  input: "block3_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block3_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/Conv2D"
  op: "Conv2D"
  input: "block3_conv1/Relu"
  input: "block3_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv2/Conv2D"
  input: "block3_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv2/Relu"
  op: "Relu"
  input: "block3_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023684317246079445
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block3_conv3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block3_conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block3_conv3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block3_conv3/kernel/Initializer/truncated_normal/mul"
  input: "block3_conv3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/kernel"
    }
  }
}
node {
  name: "block3_conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel"
  input: "block3_conv3/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/bias"
    }
  }
}
node {
  name: "block3_conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/bias"
  input: "block3_conv3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block3_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/Conv2D"
  op: "Conv2D"
  input: "block3_conv2/Relu"
  input: "block3_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv3/Conv2D"
  input: "block3_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv3/Relu"
  op: "Relu"
  input: "block3_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_pool/MaxPool"
  op: "MaxPool"
  input: "block3_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023684317246079445
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block4_conv1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block4_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block4_conv1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block4_conv1/kernel/Initializer/truncated_normal/mul"
  input: "block4_conv1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/kernel"
    }
  }
}
node {
  name: "block4_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel"
  input: "block4_conv1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/bias"
    }
  }
}
node {
  name: "block4_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/bias"
  input: "block4_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block4_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/Conv2D"
  op: "Conv2D"
  input: "block3_pool/MaxPool"
  input: "block4_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv1/Conv2D"
  input: "block4_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv1/Relu"
  op: "Relu"
  input: "block4_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01674734055995941
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block4_conv2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block4_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block4_conv2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block4_conv2/kernel/Initializer/truncated_normal/mul"
  input: "block4_conv2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/kernel"
    }
  }
}
node {
  name: "block4_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel"
  input: "block4_conv2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/bias"
    }
  }
}
node {
  name: "block4_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/bias"
  input: "block4_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block4_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/Conv2D"
  op: "Conv2D"
  input: "block4_conv1/Relu"
  input: "block4_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv2/Conv2D"
  input: "block4_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv2/Relu"
  op: "Relu"
  input: "block4_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01674734055995941
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block4_conv3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block4_conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block4_conv3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block4_conv3/kernel/Initializer/truncated_normal/mul"
  input: "block4_conv3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/kernel"
    }
  }
}
node {
  name: "block4_conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel"
  input: "block4_conv3/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/bias"
    }
  }
}
node {
  name: "block4_conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/bias"
  input: "block4_conv3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block4_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/Conv2D"
  op: "Conv2D"
  input: "block4_conv2/Relu"
  input: "block4_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv3/Conv2D"
  input: "block4_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv3/Relu"
  op: "Relu"
  input: "block4_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_pool/MaxPool"
  op: "MaxPool"
  input: "block4_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01674734055995941
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block5_conv1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block5_conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block5_conv1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block5_conv1/kernel/Initializer/truncated_normal/mul"
  input: "block5_conv1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/kernel"
    }
  }
}
node {
  name: "block5_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel"
  input: "block5_conv1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/bias"
    }
  }
}
node {
  name: "block5_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/bias"
  input: "block5_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block5_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/Conv2D"
  op: "Conv2D"
  input: "block4_pool/MaxPool"
  input: "block5_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv1/Conv2D"
  input: "block5_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv1/Relu"
  op: "Relu"
  input: "block5_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01674734055995941
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block5_conv2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block5_conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block5_conv2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block5_conv2/kernel/Initializer/truncated_normal/mul"
  input: "block5_conv2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/kernel"
    }
  }
}
node {
  name: "block5_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel"
  input: "block5_conv2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/bias"
    }
  }
}
node {
  name: "block5_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/bias"
  input: "block5_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block5_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/Conv2D"
  op: "Conv2D"
  input: "block5_conv1/Relu"
  input: "block5_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv2/Conv2D"
  input: "block5_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv2/Relu"
  op: "Relu"
  input: "block5_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01674734055995941
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "block5_conv3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "block5_conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "block5_conv3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "block5_conv3/kernel/Initializer/truncated_normal/mul"
  input: "block5_conv3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/kernel"
    }
  }
}
node {
  name: "block5_conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel"
  input: "block5_conv3/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/bias"
    }
  }
}
node {
  name: "block5_conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/bias"
  input: "block5_conv3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block5_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/Conv2D"
  op: "Conv2D"
  input: "block5_conv2/Relu"
  input: "block5_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv3/Conv2D"
  input: "block5_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv3/Relu"
  op: "Relu"
  input: "block5_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_pool/MaxPool"
  op: "MaxPool"
  input: "block5_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "global_max_pooling2d_1/Max/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_max_pooling2d_1/Max"
  op: "Max"
  input: "block5_pool/MaxPool"
  input: "global_max_pooling2d_1/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "dropout_1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/switch_t"
  op: "Identity"
  input: "dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/switch_f"
  op: "Identity"
  input: "dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "global_max_pooling2d_1/Max"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_max_pooling2d_1/Max"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/random_uniform/max"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_1/cond/dropout/random_uniform/mul"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/sub/x"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_1/cond/dropout/truediv/x"
  input: "dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/cond/dropout/random_uniform"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/mul"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Identity"
  op: "Identity"
  input: "dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "global_max_pooling2d_1/Max"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_max_pooling2d_1/Max"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Merge"
  op: "Merge"
  input: "dropout_1/cond/Identity"
  input: "dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "dense_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "dense_1/kernel/Initializer/truncated_normal/mul"
  input: "dense_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "dropout_1/cond/Merge"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Relu"
  op: "Relu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense_2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dense_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "dense_2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "dense_2/kernel/Initializer/truncated_normal/mul"
  input: "dense_2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "dense_1/Relu"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_2/Relu"
  op: "Relu"
  input: "dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense_3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dense_3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "dense_3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "dense_3/kernel/Initializer/truncated_normal/mul"
  input: "dense_3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "dense_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/kernel"
    }
  }
}
node {
  name: "dense_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "dense_3/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/bias"
    }
  }
}
node {
  name: "dense_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_3/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "dense_3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul"
  op: "MatMul"
  input: "dense_2/Relu"
  input: "dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/BiasAdd"
  op: "BiasAdd"
  input: "dense_3/MatMul"
  input: "dense_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1_conv1_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1_1/Conv2D"
  op: "Conv2D"
  input: "IteratorGetNext"
  input: "block1_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block1_conv1_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1_1/BiasAdd"
  op: "BiasAdd"
  input: "block1_conv1_1/Conv2D"
  input: "block1_conv1_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1_conv1_1/Relu"
  op: "Relu"
  input: "block1_conv1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_conv2_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2_1/Conv2D"
  op: "Conv2D"
  input: "block1_conv1_1/Relu"
  input: "block1_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block1_conv2_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2_1/BiasAdd"
  op: "BiasAdd"
  input: "block1_conv2_1/Conv2D"
  input: "block1_conv2_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1_conv2_1/Relu"
  op: "Relu"
  input: "block1_conv2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block1_pool_1/MaxPool"
  op: "MaxPool"
  input: "block1_conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block2_conv1_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1_1/Conv2D"
  op: "Conv2D"
  input: "block1_pool_1/MaxPool"
  input: "block2_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block2_conv1_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1_1/BiasAdd"
  op: "BiasAdd"
  input: "block2_conv1_1/Conv2D"
  input: "block2_conv1_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block2_conv1_1/Relu"
  op: "Relu"
  input: "block2_conv1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_conv2_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2_1/Conv2D"
  op: "Conv2D"
  input: "block2_conv1_1/Relu"
  input: "block2_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block2_conv2_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2_1/BiasAdd"
  op: "BiasAdd"
  input: "block2_conv2_1/Conv2D"
  input: "block2_conv2_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block2_conv2_1/Relu"
  op: "Relu"
  input: "block2_conv2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "block2_pool_1/MaxPool"
  op: "MaxPool"
  input: "block2_conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block3_conv1_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1_1/Conv2D"
  op: "Conv2D"
  input: "block2_pool_1/MaxPool"
  input: "block3_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv1_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1_1/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv1_1/Conv2D"
  input: "block3_conv1_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv1_1/Relu"
  op: "Relu"
  input: "block3_conv1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv2_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2_1/Conv2D"
  op: "Conv2D"
  input: "block3_conv1_1/Relu"
  input: "block3_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv2_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2_1/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv2_1/Conv2D"
  input: "block3_conv2_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv2_1/Relu"
  op: "Relu"
  input: "block3_conv2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_conv3_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3_1/Conv2D"
  op: "Conv2D"
  input: "block3_conv2_1/Relu"
  input: "block3_conv3_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv3_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3_1/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv3_1/Conv2D"
  input: "block3_conv3_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv3_1/Relu"
  op: "Relu"
  input: "block3_conv3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "block3_pool_1/MaxPool"
  op: "MaxPool"
  input: "block3_conv3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block4_conv1_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1_1/Conv2D"
  op: "Conv2D"
  input: "block3_pool_1/MaxPool"
  input: "block4_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv1_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1_1/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv1_1/Conv2D"
  input: "block4_conv1_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv1_1/Relu"
  op: "Relu"
  input: "block4_conv1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv2_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2_1/Conv2D"
  op: "Conv2D"
  input: "block4_conv1_1/Relu"
  input: "block4_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv2_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2_1/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv2_1/Conv2D"
  input: "block4_conv2_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv2_1/Relu"
  op: "Relu"
  input: "block4_conv2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_conv3_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3_1/Conv2D"
  op: "Conv2D"
  input: "block4_conv2_1/Relu"
  input: "block4_conv3_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv3_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3_1/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv3_1/Conv2D"
  input: "block4_conv3_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv3_1/Relu"
  op: "Relu"
  input: "block4_conv3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block4_pool_1/MaxPool"
  op: "MaxPool"
  input: "block4_conv3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block5_conv1_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1_1/Conv2D"
  op: "Conv2D"
  input: "block4_pool_1/MaxPool"
  input: "block5_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv1_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1_1/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv1_1/Conv2D"
  input: "block5_conv1_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv1_1/Relu"
  op: "Relu"
  input: "block5_conv1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv2_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2_1/Conv2D"
  op: "Conv2D"
  input: "block5_conv1_1/Relu"
  input: "block5_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv2_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2_1/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv2_1/Conv2D"
  input: "block5_conv2_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv2_1/Relu"
  op: "Relu"
  input: "block5_conv2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_conv3_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3_1/Conv2D"
  op: "Conv2D"
  input: "block5_conv2_1/Relu"
  input: "block5_conv3_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv3_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3_1/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv3_1/Conv2D"
  input: "block5_conv3_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv3_1/Relu"
  op: "Relu"
  input: "block5_conv3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "block5_pool_1/MaxPool"
  op: "MaxPool"
  input: "block5_conv3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "global_max_pooling2d_1_1/Max/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_max_pooling2d_1_1/Max"
  op: "Max"
  input: "block5_pool_1/MaxPool"
  input: "global_max_pooling2d_1_1/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_1_1/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/Shape"
  op: "Shape"
  input: "global_max_pooling2d_1_1/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1_1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1_1/dropout/random_uniform/max"
  input: "dropout_1_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1_1/dropout/random_uniform/RandomUniform"
  input: "dropout_1_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/random_uniform"
  op: "Add"
  input: "dropout_1_1/dropout/random_uniform/mul"
  input: "dropout_1_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/sub"
  op: "Sub"
  input: "dropout_1_1/dropout/sub/x"
  input: "dropout_1_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/truediv"
  op: "RealDiv"
  input: "dropout_1_1/dropout/truediv/x"
  input: "dropout_1_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1_1/dropout/random_uniform"
  input: "dropout_1_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/mul"
  op: "Mul"
  input: "global_max_pooling2d_1_1/Max"
  input: "dropout_1_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/Cast"
  op: "Cast"
  input: "dropout_1_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1_1/dropout/mul_1"
  op: "Mul"
  input: "dropout_1_1/dropout/mul"
  input: "dropout_1_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_1_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1_1/MatMul"
  op: "MatMul"
  input: "dropout_1_1/dropout/mul_1"
  input: "dense_1_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1_1/MatMul"
  input: "dense_1_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1_1/Relu"
  op: "Relu"
  input: "dense_1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_2_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2_1/MatMul"
  op: "MatMul"
  input: "dense_1_1/Relu"
  input: "dense_2_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_2_1/MatMul"
  input: "dense_2_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_2_1/Relu"
  op: "Relu"
  input: "dense_2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dense_3_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3_1/MatMul"
  op: "MatMul"
  input: "dense_2_1/Relu"
  input: "dense_3_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_3_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_3_1/MatMul"
  input: "dense_3_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "dense_3_1/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "class_id_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 6
          }
        }
        string_val: "Cr"
        string_val: "In"
        string_val: "Pa"
        string_val: "PS"
        string_val: "RS"
        string_val: "Sc"
      }
    }
  }
}
node {
  name: "class_id_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "class_id_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "class_id_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "class_id_lookup/range"
  op: "Range"
  input: "class_id_lookup/range/start"
  input: "class_id_lookup/Size"
  input: "class_id_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "class_id_lookup/Cast"
  op: "Cast"
  input: "class_id_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "class_id_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "class_id_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_9f0acd3b-f59b-4def-bdef-ef0f1d39167c"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "class_id_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "class_id_lookup/hash_table/hash_table"
  input: "class_id_lookup/Const"
  input: "class_id_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "class_id_lookup/hash_table/hash_table"
  input: "IteratorGetNext:1"
  input: "class_id_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "hash_table_Lookup/LookupTableFindV2"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "hash_table_Lookup/LookupTableFindV2"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "one_hot"
  op: "OneHot"
  input: "Reshape_1"
  input: "one_hot/depth"
  input: "one_hot/on_value"
  input: "one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/labels_stop_gradient"
  op: "StopGradient"
  input: "one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "dense_3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Shape"
  input: "dense_3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "softmax_cross_entropy_loss/xentropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice"
  input: "softmax_cross_entropy_loss/xentropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "dense_3_1/BiasAdd"
  input: "softmax_cross_entropy_loss/xentropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Shape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  input: "softmax_cross_entropy_loss/xentropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "softmax_cross_entropy_loss/Cast/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "softmax_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/Cast/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Softmax"
  op: "Softmax"
  input: "dense_3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "hash_table_Lookup/LookupTableFindV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "accuracy/total/Assign"
  op: "Assign"
  input: "accuracy/total"
  input: "accuracy/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "accuracy/total/read"
  op: "Identity"
  input: "accuracy/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "accuracy/count/Assign"
  op: "Assign"
  input: "accuracy/count"
  input: "accuracy/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "accuracy/count/read"
  op: "Identity"
  input: "accuracy/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Size"
  op: "Size"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/Cast"
  op: "Cast"
  input: "accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/Sum"
  op: "Sum"
  input: "Cast"
  input: "accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/AssignAdd"
  op: "AssignAdd"
  input: "accuracy/total"
  input: "accuracy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/AssignAdd_1"
  op: "AssignAdd"
  input: "accuracy/count"
  input: "accuracy/Cast"
  input: "^Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/Maximum"
  op: "Maximum"
  input: "accuracy/count/read"
  input: "accuracy/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/value"
  op: "DivNoNan"
  input: "accuracy/total/read"
  input: "accuracy/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/Maximum_1"
  op: "Maximum"
  input: "accuracy/AssignAdd_1"
  input: "accuracy/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/update_op"
  op: "DivNoNan"
  input: "accuracy/AssignAdd"
  input: "accuracy/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/TopKV2/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "mean_average_precision/TopKV2"
  op: "TopKV2"
  input: "Softmax"
  input: "mean_average_precision/TopKV2/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "mean_average_precision/Shape"
  op: "Shape"
  input: "Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_average_precision/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_average_precision/strided_slice"
  op: "StridedSlice"
  input: "mean_average_precision/Shape"
  input: "mean_average_precision/strided_slice/stack"
  input: "mean_average_precision/strided_slice/stack_1"
  input: "mean_average_precision/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mean_average_precision/Cast"
  op: "Cast"
  input: "mean_average_precision/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_average_precision/Max"
  op: "Max"
  input: "hash_table_Lookup/LookupTableFindV2"
  input: "mean_average_precision/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/GreaterEqual"
  op: "GreaterEqual"
  input: "mean_average_precision/Max"
  input: "mean_average_precision/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/Switch"
  op: "Switch"
  input: "mean_average_precision/GreaterEqual"
  input: "mean_average_precision/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/switch_t"
  op: "Identity"
  input: "mean_average_precision/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/switch_f"
  op: "Identity"
  input: "mean_average_precision/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/pred_id"
  op: "Identity"
  input: "mean_average_precision/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/GreaterEqual"
  op: "GreaterEqual"
  input: "mean_average_precision/cond/GreaterEqual/Switch:1"
  input: "mean_average_precision/cond/GreaterEqual/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/GreaterEqual/Switch"
  op: "Switch"
  input: "hash_table_Lookup/LookupTableFindV2"
  input: "mean_average_precision/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hash_table_Lookup/LookupTableFindV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/GreaterEqual/Switch_1"
  op: "Switch"
  input: "mean_average_precision/Cast"
  input: "mean_average_precision/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/ones_like/Shape"
  op: "Shape"
  input: "mean_average_precision/cond/GreaterEqual/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/cond/ones_like/Const"
  op: "Const"
  input: "^mean_average_precision/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/ones_like"
  op: "Fill"
  input: "mean_average_precision/cond/ones_like/Shape"
  input: "mean_average_precision/cond/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/cond/mul/x"
  op: "Const"
  input: "^mean_average_precision/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/mul"
  op: "Mul"
  input: "mean_average_precision/cond/mul/x"
  input: "mean_average_precision/cond/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/SelectV2"
  op: "SelectV2"
  input: "mean_average_precision/cond/GreaterEqual"
  input: "mean_average_precision/cond/mul"
  input: "mean_average_precision/cond/GreaterEqual/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/Switch_1"
  op: "Switch"
  input: "hash_table_Lookup/LookupTableFindV2"
  input: "mean_average_precision/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hash_table_Lookup/LookupTableFindV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/cond/Merge"
  op: "Merge"
  input: "mean_average_precision/cond/Switch_1"
  input: "mean_average_precision/cond/SelectV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/predictions_idx"
  op: "Cast"
  input: "mean_average_precision/TopKV2:1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/expand_labels/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/expand_labels"
  op: "ExpandDims"
  input: "mean_average_precision/cond/Merge"
  input: "mean_average_precision/average_precision/expand_labels/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/predictions_idx_per_k/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/predictions_idx_per_k"
  op: "ExpandDims"
  input: "mean_average_precision/average_precision/predictions_idx"
  input: "mean_average_precision/average_precision/predictions_idx_per_k/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/expand/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/expand"
  op: "ExpandDims"
  input: "mean_average_precision/average_precision/expand_labels"
  input: "mean_average_precision/average_precision/labels_per_k/expand/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/Shape"
  op: "Shape"
  input: "mean_average_precision/average_precision/expand_labels"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/ones_like"
  op: "Fill"
  input: "mean_average_precision/average_precision/labels_per_k/ones_like/Shape"
  input: "mean_average_precision/average_precision/labels_per_k/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice"
  op: "StridedSlice"
  input: "mean_average_precision/average_precision/labels_per_k/ones_like"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice/stack"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice/stack_1"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/strided_slice_1"
  op: "StridedSlice"
  input: "mean_average_precision/average_precision/labels_per_k/ones_like"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice_1/stack"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice_1/stack_1"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/multiples/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/multiples/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k/multiples"
  op: "ConcatV2"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice"
  input: "mean_average_precision/average_precision/labels_per_k/multiples/values_1"
  input: "mean_average_precision/average_precision/labels_per_k/strided_slice_1"
  input: "mean_average_precision/average_precision/labels_per_k/multiples/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/labels_per_k"
  op: "Tile"
  input: "mean_average_precision/average_precision/labels_per_k/expand"
  input: "mean_average_precision/average_precision/labels_per_k/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/relevant_per_k/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "mean_average_precision/average_precision/predictions_idx_per_k"
  input: "mean_average_precision/average_precision/labels_per_k"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "intersection"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "mean_average_precision/average_precision/relevant_per_k/SetSize"
  op: "SetSize"
  input: "mean_average_precision/average_precision/relevant_per_k/DenseToDenseSetOperation"
  input: "mean_average_precision/average_precision/relevant_per_k/DenseToDenseSetOperation:1"
  input: "mean_average_precision/average_precision/relevant_per_k/DenseToDenseSetOperation:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "mean_average_precision/average_precision/relevant_per_k/Cast"
  op: "Cast"
  input: "mean_average_precision/average_precision/relevant_per_k/SetSize"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/tp_per_k/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/tp_per_k"
  op: "Cumsum"
  input: "mean_average_precision/average_precision/relevant_per_k/Cast"
  input: "mean_average_precision/average_precision/tp_per_k/axis"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: false
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/average_precision/ones_like/Shape"
  op: "Shape"
  input: "mean_average_precision/average_precision/relevant_per_k/Cast"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/average_precision/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/ones_like"
  op: "Fill"
  input: "mean_average_precision/average_precision/ones_like/Shape"
  input: "mean_average_precision/average_precision/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/average_precision/retrieved_per_k/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/retrieved_per_k"
  op: "Cumsum"
  input: "mean_average_precision/average_precision/ones_like"
  input: "mean_average_precision/average_precision/retrieved_per_k/axis"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: false
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/average_precision/precision_per_k"
  op: "RealDiv"
  input: "mean_average_precision/average_precision/tp_per_k"
  input: "mean_average_precision/average_precision/retrieved_per_k"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/relevant_precision_per_k"
  op: "Mul"
  input: "mean_average_precision/average_precision/precision_per_k"
  input: "mean_average_precision/average_precision/relevant_per_k/Cast"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/precision_sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/precision_sum"
  op: "Sum"
  input: "mean_average_precision/average_precision/relevant_precision_per_k"
  input: "mean_average_precision/average_precision/precision_sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/GreaterEqual"
  op: "GreaterEqual"
  input: "mean_average_precision/average_precision/expand_labels"
  input: "mean_average_precision/average_precision/num_relevant/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/ones_like/Shape"
  op: "Shape"
  input: "mean_average_precision/average_precision/expand_labels"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/ones_like"
  op: "Fill"
  input: "mean_average_precision/average_precision/num_relevant/ones_like/Shape"
  input: "mean_average_precision/average_precision/num_relevant/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/zeros_like"
  op: "ZerosLike"
  input: "mean_average_precision/average_precision/expand_labels"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/SelectV2"
  op: "SelectV2"
  input: "mean_average_precision/average_precision/num_relevant/GreaterEqual"
  input: "mean_average_precision/average_precision/num_relevant/ones_like"
  input: "mean_average_precision/average_precision/num_relevant/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/Sum"
  op: "Sum"
  input: "mean_average_precision/average_precision/num_relevant/SelectV2"
  input: "mean_average_precision/average_precision/num_relevant/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 6
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/num_relevant"
  op: "Minimum"
  input: "mean_average_precision/average_precision/num_relevant/Sum"
  input: "mean_average_precision/average_precision/num_relevant/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision/Cast"
  op: "Cast"
  input: "mean_average_precision/average_precision/num_relevant"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/average_precision"
  op: "RealDiv"
  input: "mean_average_precision/average_precision/precision_sum"
  input: "mean_average_precision/average_precision/Cast"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/max_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/max_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "mean_average_precision/max_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/max_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_average_precision/max_1/Assign"
  op: "Assign"
  input: "mean_average_precision/max_1"
  input: "mean_average_precision/max_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/max_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_average_precision/max_1/read"
  op: "Identity"
  input: "mean_average_precision/max_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/max_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/max_1/batch_max"
  op: "Size"
  input: "mean_average_precision/average_precision"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_average_precision/max_1/Cast"
  op: "Cast"
  input: "mean_average_precision/max_1/batch_max"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/max_1/update"
  op: "AssignAdd"
  input: "mean_average_precision/max_1"
  input: "mean_average_precision/max_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/max_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "mean_average_precision/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_average_precision/total/Assign"
  op: "Assign"
  input: "mean_average_precision/total"
  input: "mean_average_precision/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_average_precision/total/read"
  op: "Identity"
  input: "mean_average_precision/total"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/total/Rank"
  op: "Rank"
  input: "mean_average_precision/average_precision"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/total/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_average_precision/total/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_average_precision/total/range"
  op: "Range"
  input: "mean_average_precision/total/range/start"
  input: "mean_average_precision/total/Rank"
  input: "mean_average_precision/total/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_average_precision/total/batch_total"
  op: "Sum"
  input: "mean_average_precision/average_precision"
  input: "mean_average_precision/total/range"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/total/update"
  op: "AssignAdd"
  input: "mean_average_precision/total"
  input: "mean_average_precision/total/batch_total"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_average_precision/mean"
  op: "DivNoNan"
  input: "mean_average_precision/total/read"
  input: "mean_average_precision/max_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision"
  op: "DivNoNan"
  input: "mean_average_precision/total/update"
  input: "mean_average_precision/max_1/update"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy_1"
      }
    }
  }
}
node {
  name: "accuracy_1"
  op: "ScalarSummary"
  input: "accuracy_1/tags"
  input: "accuracy/update_op"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_average_precision_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_average_precision_1"
      }
    }
  }
}
node {
  name: "mean_average_precision_1"
  op: "ScalarSummary"
  input: "mean_average_precision_1/tags"
  input: "mean_average_precision"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "softmax_cross_entropy_loss/value"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Neg"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Shape"
  input: "dense_3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_3_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense_3_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense_3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
}
node {
  name: "gradients/dense_3_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "^gradients/dense_3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_3_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense_3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_3_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_3_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense_3_1/BiasAdd_grad/tuple/control_dependency"
  input: "dense_3_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense_3_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_2_1/Relu"
  input: "gradients/dense_3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense_3_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense_3_1/MatMul_grad/MatMul"
  input: "^gradients/dense_3_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense_3_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense_3_1/MatMul_grad/MatMul"
  input: "^gradients/dense_3_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_3_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_3_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_3_1/MatMul_grad/MatMul_1"
  input: "^gradients/dense_3_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_3_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/dense_3_1/MatMul_grad/tuple/control_dependency"
  input: "dense_2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/dense_2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense_2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense_2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense_2_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/dense_2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense_2_1/Relu_grad/ReluGrad"
  input: "^gradients/dense_2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense_2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense_2_1/BiasAdd_grad/tuple/control_dependency"
  input: "dense_2_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense_2_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense_1_1/Relu"
  input: "gradients/dense_2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense_2_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense_2_1/MatMul_grad/MatMul"
  input: "^gradients/dense_2_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense_2_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense_2_1/MatMul_grad/MatMul"
  input: "^gradients/dense_2_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_2_1/MatMul_grad/MatMul_1"
  input: "^gradients/dense_2_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/dense_2_1/MatMul_grad/tuple/control_dependency"
  input: "dense_1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/dense_1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense_1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense_1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense_1_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/dense_1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense_1_1/Relu_grad/ReluGrad"
  input: "^gradients/dense_1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense_1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense_1_1/BiasAdd_grad/tuple/control_dependency"
  input: "dense_1_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense_1_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_1_1/dropout/mul_1"
  input: "gradients/dense_1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense_1_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense_1_1/MatMul_grad/MatMul"
  input: "^gradients/dense_1_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense_1_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense_1_1/MatMul_grad/MatMul"
  input: "^gradients/dense_1_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense_1_1/MatMul_grad/MatMul_1"
  input: "^gradients/dense_1_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_1_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_1_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Shape"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dense_1_1/MatMul_grad/tuple/control_dependency"
  input: "dropout_1_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Mul"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Sum"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_1_1/dropout/mul"
  input: "gradients/dense_1_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Mul_1"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Sum_1"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_1_1/dropout/mul_1_grad/Reshape"
  input: "^gradients/dropout_1_1/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Reshape"
  input: "^gradients/dropout_1_1/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1_1/dropout/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/dropout_1_1/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1_1/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "global_max_pooling2d_1_1/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_1_1/dropout/mul_grad/Shape"
  input: "gradients/dropout_1_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/tuple/control_dependency"
  input: "dropout_1_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_1_1/dropout/mul_grad/Mul"
  input: "gradients/dropout_1_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_1_1/dropout/mul_grad/Sum"
  input: "gradients/dropout_1_1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "global_max_pooling2d_1_1/Max"
  input: "gradients/dropout_1_1/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_1_1/dropout/mul_grad/Mul_1"
  input: "gradients/dropout_1_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_1_1/dropout/mul_grad/Sum_1"
  input: "gradients/dropout_1_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_1_1/dropout/mul_grad/Reshape"
  input: "^gradients/dropout_1_1/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_1_1/dropout/mul_grad/Reshape"
  input: "^gradients/dropout_1_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1_1/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_1_1/dropout/mul_grad/Reshape_1"
  input: "^gradients/dropout_1_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1_1/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Shape"
  op: "Shape"
  input: "block5_pool_1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/add"
  op: "AddV2"
  input: "global_max_pooling2d_1_1/Max/reduction_indices"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/mod"
  op: "FloorMod"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/add"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/range"
  op: "Range"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/range/start"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Size"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Fill"
  op: "Fill"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Shape_1"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/range"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/mod"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Shape"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Reshape"
  op: "Reshape"
  input: "global_max_pooling2d_1_1/Max"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_1_1/dropout/mul_grad/tuple/control_dependency"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Equal"
  op: "Equal"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Reshape"
  input: "block5_pool_1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Cast"
  op: "Cast"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Sum"
  op: "Sum"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Cast"
  input: "global_max_pooling2d_1_1/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/Reshape_2"
  op: "Reshape"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Sum"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/truediv"
  op: "RealDiv"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Cast"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/global_max_pooling2d_1_1/Max_grad/mul"
  op: "Mul"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/truediv"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_pool_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block5_conv3_1/Relu"
  input: "block5_pool_1/MaxPool"
  input: "gradients/global_max_pooling2d_1_1/Max_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/block5_conv3_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block5_pool_1/MaxPool_grad/MaxPoolGrad"
  input: "block5_conv3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv3_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block5_conv3_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block5_conv3_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block5_conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block5_conv3_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block5_conv3_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5_conv3_1/Relu_grad/ReluGrad"
  input: "^gradients/block5_conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv3_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5_conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block5_conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv3_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv3_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block5_conv2_1/Relu"
  input: "block5_conv3_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block5_conv3_1/Conv2D_grad/ShapeN"
  input: "block5_conv3_1/Conv2D/ReadVariableOp"
  input: "gradients/block5_conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block5_conv2_1/Relu"
  input: "gradients/block5_conv3_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block5_conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5_conv3_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block5_conv3_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block5_conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv3_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block5_conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block5_conv3_1/Conv2D_grad/tuple/control_dependency"
  input: "block5_conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block5_conv2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block5_conv2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block5_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block5_conv2_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block5_conv2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5_conv2_1/Relu_grad/ReluGrad"
  input: "^gradients/block5_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block5_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv2_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block5_conv1_1/Relu"
  input: "block5_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block5_conv2_1/Conv2D_grad/ShapeN"
  input: "block5_conv2_1/Conv2D/ReadVariableOp"
  input: "gradients/block5_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block5_conv1_1/Relu"
  input: "gradients/block5_conv2_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block5_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5_conv2_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block5_conv2_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block5_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block5_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block5_conv2_1/Conv2D_grad/tuple/control_dependency"
  input: "block5_conv1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block5_conv1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block5_conv1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block5_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block5_conv1_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block5_conv1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5_conv1_1/Relu_grad/ReluGrad"
  input: "^gradients/block5_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block5_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv1_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block4_pool_1/MaxPool"
  input: "block5_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block5_conv1_1/Conv2D_grad/ShapeN"
  input: "block5_conv1_1/Conv2D/ReadVariableOp"
  input: "gradients/block5_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block4_pool_1/MaxPool"
  input: "gradients/block5_conv1_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block5_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block5_conv1_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block5_conv1_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block5_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block5_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block5_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block5_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_pool_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block4_conv3_1/Relu"
  input: "block4_pool_1/MaxPool"
  input: "gradients/block5_conv1_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/block4_conv3_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block4_pool_1/MaxPool_grad/MaxPoolGrad"
  input: "block4_conv3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv3_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block4_conv3_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block4_conv3_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block4_conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block4_conv3_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block4_conv3_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4_conv3_1/Relu_grad/ReluGrad"
  input: "^gradients/block4_conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv3_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4_conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block4_conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv3_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv3_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block4_conv2_1/Relu"
  input: "block4_conv3_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block4_conv3_1/Conv2D_grad/ShapeN"
  input: "block4_conv3_1/Conv2D/ReadVariableOp"
  input: "gradients/block4_conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block4_conv2_1/Relu"
  input: "gradients/block4_conv3_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block4_conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4_conv3_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block4_conv3_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block4_conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv3_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block4_conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block4_conv3_1/Conv2D_grad/tuple/control_dependency"
  input: "block4_conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block4_conv2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block4_conv2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block4_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block4_conv2_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block4_conv2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4_conv2_1/Relu_grad/ReluGrad"
  input: "^gradients/block4_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block4_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv2_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block4_conv1_1/Relu"
  input: "block4_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block4_conv2_1/Conv2D_grad/ShapeN"
  input: "block4_conv2_1/Conv2D/ReadVariableOp"
  input: "gradients/block4_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block4_conv1_1/Relu"
  input: "gradients/block4_conv2_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block4_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4_conv2_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block4_conv2_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block4_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block4_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block4_conv2_1/Conv2D_grad/tuple/control_dependency"
  input: "block4_conv1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block4_conv1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block4_conv1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block4_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block4_conv1_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block4_conv1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4_conv1_1/Relu_grad/ReluGrad"
  input: "^gradients/block4_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block4_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv1_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block3_pool_1/MaxPool"
  input: "block4_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block4_conv1_1/Conv2D_grad/ShapeN"
  input: "block4_conv1_1/Conv2D/ReadVariableOp"
  input: "gradients/block4_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block3_pool_1/MaxPool"
  input: "gradients/block4_conv1_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block4_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block4_conv1_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block4_conv1_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block4_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block4_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block4_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block4_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_pool_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block3_conv3_1/Relu"
  input: "block3_pool_1/MaxPool"
  input: "gradients/block4_conv1_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/block3_conv3_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block3_pool_1/MaxPool_grad/MaxPoolGrad"
  input: "block3_conv3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv3_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block3_conv3_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block3_conv3_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block3_conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block3_conv3_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block3_conv3_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3_conv3_1/Relu_grad/ReluGrad"
  input: "^gradients/block3_conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv3_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3_conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block3_conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv3_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv3_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block3_conv2_1/Relu"
  input: "block3_conv3_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block3_conv3_1/Conv2D_grad/ShapeN"
  input: "block3_conv3_1/Conv2D/ReadVariableOp"
  input: "gradients/block3_conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block3_conv2_1/Relu"
  input: "gradients/block3_conv3_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block3_conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3_conv3_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block3_conv3_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block3_conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv3_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block3_conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block3_conv3_1/Conv2D_grad/tuple/control_dependency"
  input: "block3_conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block3_conv2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block3_conv2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block3_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block3_conv2_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block3_conv2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3_conv2_1/Relu_grad/ReluGrad"
  input: "^gradients/block3_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block3_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv2_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block3_conv1_1/Relu"
  input: "block3_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block3_conv2_1/Conv2D_grad/ShapeN"
  input: "block3_conv2_1/Conv2D/ReadVariableOp"
  input: "gradients/block3_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block3_conv1_1/Relu"
  input: "gradients/block3_conv2_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block3_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3_conv2_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block3_conv2_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block3_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block3_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block3_conv2_1/Conv2D_grad/tuple/control_dependency"
  input: "block3_conv1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block3_conv1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block3_conv1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block3_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block3_conv1_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block3_conv1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3_conv1_1/Relu_grad/ReluGrad"
  input: "^gradients/block3_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block3_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv1_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block2_pool_1/MaxPool"
  input: "block3_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block3_conv1_1/Conv2D_grad/ShapeN"
  input: "block3_conv1_1/Conv2D/ReadVariableOp"
  input: "gradients/block3_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block2_pool_1/MaxPool"
  input: "gradients/block3_conv1_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block3_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block3_conv1_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block3_conv1_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block3_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block3_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block3_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block3_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_pool_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block2_conv2_1/Relu"
  input: "block2_pool_1/MaxPool"
  input: "gradients/block3_conv1_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/block2_conv2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block2_pool_1/MaxPool_grad/MaxPoolGrad"
  input: "block2_conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block2_conv2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block2_conv2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block2_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block2_conv2_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block2_conv2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2_conv2_1/Relu_grad/ReluGrad"
  input: "^gradients/block2_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block2_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv2_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block2_conv1_1/Relu"
  input: "block2_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block2_conv2_1/Conv2D_grad/ShapeN"
  input: "block2_conv2_1/Conv2D/ReadVariableOp"
  input: "gradients/block2_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block2_conv1_1/Relu"
  input: "gradients/block2_conv2_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block2_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block2_conv2_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block2_conv2_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block2_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block2_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block2_conv2_1/Conv2D_grad/tuple/control_dependency"
  input: "block2_conv1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block2_conv1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block2_conv1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block2_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block2_conv1_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block2_conv1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2_conv1_1/Relu_grad/ReluGrad"
  input: "^gradients/block2_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block2_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv1_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block1_pool_1/MaxPool"
  input: "block2_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block2_conv1_1/Conv2D_grad/ShapeN"
  input: "block2_conv1_1/Conv2D/ReadVariableOp"
  input: "gradients/block2_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block1_pool_1/MaxPool"
  input: "gradients/block2_conv1_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block2_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block2_conv1_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block2_conv1_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block2_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block2_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block2_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block2_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_pool_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block1_conv2_1/Relu"
  input: "block1_pool_1/MaxPool"
  input: "gradients/block2_conv1_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/block1_conv2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block1_pool_1/MaxPool_grad/MaxPoolGrad"
  input: "block1_conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block1_conv2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block1_conv2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block1_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block1_conv2_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block1_conv2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block1_conv2_1/Relu_grad/ReluGrad"
  input: "^gradients/block1_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block1_conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block1_conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv2_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block1_conv1_1/Relu"
  input: "block1_conv2_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block1_conv2_1/Conv2D_grad/ShapeN"
  input: "block1_conv2_1/Conv2D/ReadVariableOp"
  input: "gradients/block1_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block1_conv1_1/Relu"
  input: "gradients/block1_conv2_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block1_conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block1_conv2_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block1_conv2_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block1_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block1_conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/block1_conv2_1/Conv2D_grad/tuple/control_dependency"
  input: "block1_conv1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/block1_conv1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/block1_conv1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block1_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block1_conv1_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/block1_conv1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block1_conv1_1/Relu_grad/ReluGrad"
  input: "^gradients/block1_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block1_conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/block1_conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv1_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "IteratorGetNext"
  input: "block1_conv1_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/block1_conv1_1/Conv2D_grad/ShapeN"
  input: "block1_conv1_1/Conv2D/ReadVariableOp"
  input: "gradients/block1_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "IteratorGetNext"
  input: "gradients/block1_conv1_1/Conv2D_grad/ShapeN:1"
  input: "gradients/block1_conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/block1_conv1_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/block1_conv1_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/block1_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/block1_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/block1_conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/block1_conv1_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/kernel/Adam"
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel/Adam"
  input: "block1_conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel/Adam_1"
  input: "block1_conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/bias/Adam"
    }
  }
}
node {
  name: "block1_conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/bias/Adam"
  input: "block1_conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/bias/Adam_1"
    }
  }
}
node {
  name: "block1_conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/bias/Adam_1"
  input: "block1_conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block1_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block1_conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/kernel/Adam"
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel/Adam"
  input: "block1_conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block1_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block1_conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel/Adam_1"
  input: "block1_conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/bias/Adam"
    }
  }
}
node {
  name: "block1_conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/bias/Adam"
  input: "block1_conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/bias/Adam_1"
    }
  }
}
node {
  name: "block1_conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block1_conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/bias/Adam_1"
  input: "block1_conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block2_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block2_conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/kernel/Adam"
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel/Adam"
  input: "block2_conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block2_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block2_conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel/Adam_1"
  input: "block2_conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/bias/Adam"
    }
  }
}
node {
  name: "block2_conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/bias/Adam"
  input: "block2_conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/bias/Adam_1"
    }
  }
}
node {
  name: "block2_conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/bias/Adam_1"
  input: "block2_conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block2_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block2_conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/kernel/Adam"
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel/Adam"
  input: "block2_conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block2_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block2_conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel/Adam_1"
  input: "block2_conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/bias/Adam"
    }
  }
}
node {
  name: "block2_conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/bias/Adam"
  input: "block2_conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/bias/Adam_1"
    }
  }
}
node {
  name: "block2_conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block2_conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/bias/Adam_1"
  input: "block2_conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block3_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block3_conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/kernel/Adam"
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel/Adam"
  input: "block3_conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block3_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block3_conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel/Adam_1"
  input: "block3_conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/bias/Adam"
    }
  }
}
node {
  name: "block3_conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/bias/Adam"
  input: "block3_conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/bias/Adam_1"
    }
  }
}
node {
  name: "block3_conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/bias/Adam_1"
  input: "block3_conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block3_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block3_conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/kernel/Adam"
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel/Adam"
  input: "block3_conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block3_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block3_conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel/Adam_1"
  input: "block3_conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/bias/Adam"
    }
  }
}
node {
  name: "block3_conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/bias/Adam"
  input: "block3_conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/bias/Adam_1"
    }
  }
}
node {
  name: "block3_conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/bias/Adam_1"
  input: "block3_conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block3_conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block3_conv3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/kernel/Adam"
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel/Adam"
  input: "block3_conv3/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block3_conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block3_conv3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/kernel/Adam_1"
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel/Adam_1"
  input: "block3_conv3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/bias/Adam"
    }
  }
}
node {
  name: "block3_conv3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/bias/Adam"
  input: "block3_conv3/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/bias/Adam_1"
    }
  }
}
node {
  name: "block3_conv3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block3_conv3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/bias/Adam_1"
  input: "block3_conv3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block4_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block4_conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/kernel/Adam"
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel/Adam"
  input: "block4_conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block4_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block4_conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel/Adam_1"
  input: "block4_conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/bias/Adam"
    }
  }
}
node {
  name: "block4_conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/bias/Adam"
  input: "block4_conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/bias/Adam_1"
    }
  }
}
node {
  name: "block4_conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/bias/Adam_1"
  input: "block4_conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block4_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block4_conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/kernel/Adam"
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel/Adam"
  input: "block4_conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block4_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block4_conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel/Adam_1"
  input: "block4_conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/bias/Adam"
    }
  }
}
node {
  name: "block4_conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/bias/Adam"
  input: "block4_conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/bias/Adam_1"
    }
  }
}
node {
  name: "block4_conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/bias/Adam_1"
  input: "block4_conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block4_conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block4_conv3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/kernel/Adam"
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel/Adam"
  input: "block4_conv3/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block4_conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block4_conv3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/kernel/Adam_1"
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel/Adam_1"
  input: "block4_conv3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/bias/Adam"
    }
  }
}
node {
  name: "block4_conv3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/bias/Adam"
  input: "block4_conv3/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/bias/Adam_1"
    }
  }
}
node {
  name: "block4_conv3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block4_conv3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/bias/Adam_1"
  input: "block4_conv3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block5_conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block5_conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/kernel/Adam"
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel/Adam"
  input: "block5_conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block5_conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block5_conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel/Adam_1"
  input: "block5_conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/bias/Adam"
    }
  }
}
node {
  name: "block5_conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/bias/Adam"
  input: "block5_conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/bias/Adam_1"
    }
  }
}
node {
  name: "block5_conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/bias/Adam_1"
  input: "block5_conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block5_conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block5_conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/kernel/Adam"
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel/Adam"
  input: "block5_conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block5_conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block5_conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel/Adam_1"
  input: "block5_conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/bias/Adam"
    }
  }
}
node {
  name: "block5_conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/bias/Adam"
  input: "block5_conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/bias/Adam_1"
    }
  }
}
node {
  name: "block5_conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/bias/Adam_1"
  input: "block5_conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "block5_conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "block5_conv3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/kernel/Adam"
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel/Adam"
  input: "block5_conv3/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "block5_conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "block5_conv3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/kernel/Adam_1"
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel/Adam_1"
  input: "block5_conv3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/bias/Adam"
    }
  }
}
node {
  name: "block5_conv3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/bias/Adam"
  input: "block5_conv3/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/bias/Adam_1"
    }
  }
}
node {
  name: "block5_conv3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "block5_conv3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/bias/Adam_1"
  input: "block5_conv3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam"
    }
  }
}
node {
  name: "dense_1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam"
    }
  }
}
node {
  name: "dense_1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam_1"
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam"
    }
  }
}
node {
  name: "dense_2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam"
    }
  }
}
node {
  name: "dense_2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam_1"
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "dense_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense_3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/kernel/Adam"
    }
  }
}
node {
  name: "dense_3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_3/kernel/Adam"
  input: "dense_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense_3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_3/kernel/Adam_1"
  input: "dense_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/bias/Adam"
    }
  }
}
node {
  name: "dense_3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_3/bias/Adam"
  input: "dense_3/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/bias/Adam_1"
    }
  }
}
node {
  name: "dense_3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_3/bias/Adam_1"
  input: "dense_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_block1_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block1_conv1/kernel"
  input: "block1_conv1/kernel/Adam"
  input: "block1_conv1/kernel/Adam_1"
  input: "Adam/update_block1_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block1_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block1_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block1_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block1_conv1/bias"
  input: "block1_conv1/bias/Adam"
  input: "block1_conv1/bias/Adam_1"
  input: "Adam/update_block1_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block1_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block1_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block1_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block1_conv2/kernel"
  input: "block1_conv2/kernel/Adam"
  input: "block1_conv2/kernel/Adam_1"
  input: "Adam/update_block1_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block1_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block1_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block1_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block1_conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block1_conv2/bias"
  input: "block1_conv2/bias/Adam"
  input: "block1_conv2/bias/Adam_1"
  input: "Adam/update_block1_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block1_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block1_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block2_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block2_conv1/kernel"
  input: "block2_conv1/kernel/Adam"
  input: "block2_conv1/kernel/Adam_1"
  input: "Adam/update_block2_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block2_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block2_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block2_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block2_conv1/bias"
  input: "block2_conv1/bias/Adam"
  input: "block2_conv1/bias/Adam_1"
  input: "Adam/update_block2_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block2_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block2_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block2_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block2_conv2/kernel"
  input: "block2_conv2/kernel/Adam"
  input: "block2_conv2/kernel/Adam_1"
  input: "Adam/update_block2_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block2_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block2_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block2_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block2_conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block2_conv2/bias"
  input: "block2_conv2/bias/Adam"
  input: "block2_conv2/bias/Adam_1"
  input: "Adam/update_block2_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block2_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block2_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block3_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block3_conv1/kernel"
  input: "block3_conv1/kernel/Adam"
  input: "block3_conv1/kernel/Adam_1"
  input: "Adam/update_block3_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block3_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block3_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block3_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block3_conv1/bias"
  input: "block3_conv1/bias/Adam"
  input: "block3_conv1/bias/Adam_1"
  input: "Adam/update_block3_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block3_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block3_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block3_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block3_conv2/kernel"
  input: "block3_conv2/kernel/Adam"
  input: "block3_conv2/kernel/Adam_1"
  input: "Adam/update_block3_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block3_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block3_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block3_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block3_conv2/bias"
  input: "block3_conv2/bias/Adam"
  input: "block3_conv2/bias/Adam_1"
  input: "Adam/update_block3_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block3_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block3_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block3_conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block3_conv3/kernel"
  input: "block3_conv3/kernel/Adam"
  input: "block3_conv3/kernel/Adam_1"
  input: "Adam/update_block3_conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block3_conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block3_conv3_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block3_conv3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block3_conv3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block3_conv3/bias"
  input: "block3_conv3/bias/Adam"
  input: "block3_conv3/bias/Adam_1"
  input: "Adam/update_block3_conv3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block3_conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block3_conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block4_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block4_conv1/kernel"
  input: "block4_conv1/kernel/Adam"
  input: "block4_conv1/kernel/Adam_1"
  input: "Adam/update_block4_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block4_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block4_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block4_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block4_conv1/bias"
  input: "block4_conv1/bias/Adam"
  input: "block4_conv1/bias/Adam_1"
  input: "Adam/update_block4_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block4_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block4_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block4_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block4_conv2/kernel"
  input: "block4_conv2/kernel/Adam"
  input: "block4_conv2/kernel/Adam_1"
  input: "Adam/update_block4_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block4_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block4_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block4_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block4_conv2/bias"
  input: "block4_conv2/bias/Adam"
  input: "block4_conv2/bias/Adam_1"
  input: "Adam/update_block4_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block4_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block4_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block4_conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block4_conv3/kernel"
  input: "block4_conv3/kernel/Adam"
  input: "block4_conv3/kernel/Adam_1"
  input: "Adam/update_block4_conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block4_conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block4_conv3_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block4_conv3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block4_conv3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block4_conv3/bias"
  input: "block4_conv3/bias/Adam"
  input: "block4_conv3/bias/Adam_1"
  input: "Adam/update_block4_conv3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block4_conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block4_conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block5_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block5_conv1/kernel"
  input: "block5_conv1/kernel/Adam"
  input: "block5_conv1/kernel/Adam_1"
  input: "Adam/update_block5_conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block5_conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block5_conv1_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block5_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block5_conv1/bias"
  input: "block5_conv1/bias/Adam"
  input: "block5_conv1/bias/Adam_1"
  input: "Adam/update_block5_conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block5_conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block5_conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block5_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block5_conv2/kernel"
  input: "block5_conv2/kernel/Adam"
  input: "block5_conv2/kernel/Adam_1"
  input: "Adam/update_block5_conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block5_conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block5_conv2_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block5_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block5_conv2/bias"
  input: "block5_conv2/bias/Adam"
  input: "block5_conv2/bias/Adam_1"
  input: "Adam/update_block5_conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block5_conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block5_conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block5_conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block5_conv3/kernel"
  input: "block5_conv3/kernel/Adam"
  input: "block5_conv3/kernel/Adam_1"
  input: "Adam/update_block5_conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block5_conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block5_conv3_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_block5_conv3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_block5_conv3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "block5_conv3/bias"
  input: "block5_conv3/bias/Adam"
  input: "block5_conv3/bias/Adam_1"
  input: "Adam/update_block5_conv3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_block5_conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/block5_conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam_1"
  input: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense_1_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/bias"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam_1"
  input: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense_1_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam_1"
  input: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense_2_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/bias"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam_1"
  input: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense_2_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_3/kernel"
  input: "dense_3/kernel/Adam"
  input: "dense_3/kernel/Adam_1"
  input: "Adam/update_dense_3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense_3_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_3/bias"
  input: "dense_3/bias/Adam"
  input: "dense_3/bias/Adam_1"
  input: "Adam/update_dense_3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense_3_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/update_block1_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_3/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_3/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_block1_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_3/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_3/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/update_block1_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_3/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_3/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_block1_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_3/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_3/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_block1_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block1_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block2_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block3_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block4_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_block5_conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_3/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_3/kernel/ResourceApplyAdam"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^block1_conv1/bias/Adam/Assign"
  input: "^block1_conv1/bias/Adam_1/Assign"
  input: "^block1_conv1/bias/Assign"
  input: "^block1_conv1/kernel/Adam/Assign"
  input: "^block1_conv1/kernel/Adam_1/Assign"
  input: "^block1_conv1/kernel/Assign"
  input: "^block1_conv2/bias/Adam/Assign"
  input: "^block1_conv2/bias/Adam_1/Assign"
  input: "^block1_conv2/bias/Assign"
  input: "^block1_conv2/kernel/Adam/Assign"
  input: "^block1_conv2/kernel/Adam_1/Assign"
  input: "^block1_conv2/kernel/Assign"
  input: "^block2_conv1/bias/Adam/Assign"
  input: "^block2_conv1/bias/Adam_1/Assign"
  input: "^block2_conv1/bias/Assign"
  input: "^block2_conv1/kernel/Adam/Assign"
  input: "^block2_conv1/kernel/Adam_1/Assign"
  input: "^block2_conv1/kernel/Assign"
  input: "^block2_conv2/bias/Adam/Assign"
  input: "^block2_conv2/bias/Adam_1/Assign"
  input: "^block2_conv2/bias/Assign"
  input: "^block2_conv2/kernel/Adam/Assign"
  input: "^block2_conv2/kernel/Adam_1/Assign"
  input: "^block2_conv2/kernel/Assign"
  input: "^block3_conv1/bias/Adam/Assign"
  input: "^block3_conv1/bias/Adam_1/Assign"
  input: "^block3_conv1/bias/Assign"
  input: "^block3_conv1/kernel/Adam/Assign"
  input: "^block3_conv1/kernel/Adam_1/Assign"
  input: "^block3_conv1/kernel/Assign"
  input: "^block3_conv2/bias/Adam/Assign"
  input: "^block3_conv2/bias/Adam_1/Assign"
  input: "^block3_conv2/bias/Assign"
  input: "^block3_conv2/kernel/Adam/Assign"
  input: "^block3_conv2/kernel/Adam_1/Assign"
  input: "^block3_conv2/kernel/Assign"
  input: "^block3_conv3/bias/Adam/Assign"
  input: "^block3_conv3/bias/Adam_1/Assign"
  input: "^block3_conv3/bias/Assign"
  input: "^block3_conv3/kernel/Adam/Assign"
  input: "^block3_conv3/kernel/Adam_1/Assign"
  input: "^block3_conv3/kernel/Assign"
  input: "^block4_conv1/bias/Adam/Assign"
  input: "^block4_conv1/bias/Adam_1/Assign"
  input: "^block4_conv1/bias/Assign"
  input: "^block4_conv1/kernel/Adam/Assign"
  input: "^block4_conv1/kernel/Adam_1/Assign"
  input: "^block4_conv1/kernel/Assign"
  input: "^block4_conv2/bias/Adam/Assign"
  input: "^block4_conv2/bias/Adam_1/Assign"
  input: "^block4_conv2/bias/Assign"
  input: "^block4_conv2/kernel/Adam/Assign"
  input: "^block4_conv2/kernel/Adam_1/Assign"
  input: "^block4_conv2/kernel/Assign"
  input: "^block4_conv3/bias/Adam/Assign"
  input: "^block4_conv3/bias/Adam_1/Assign"
  input: "^block4_conv3/bias/Assign"
  input: "^block4_conv3/kernel/Adam/Assign"
  input: "^block4_conv3/kernel/Adam_1/Assign"
  input: "^block4_conv3/kernel/Assign"
  input: "^block5_conv1/bias/Adam/Assign"
  input: "^block5_conv1/bias/Adam_1/Assign"
  input: "^block5_conv1/bias/Assign"
  input: "^block5_conv1/kernel/Adam/Assign"
  input: "^block5_conv1/kernel/Adam_1/Assign"
  input: "^block5_conv1/kernel/Assign"
  input: "^block5_conv2/bias/Adam/Assign"
  input: "^block5_conv2/bias/Adam_1/Assign"
  input: "^block5_conv2/bias/Assign"
  input: "^block5_conv2/kernel/Adam/Assign"
  input: "^block5_conv2/kernel/Adam_1/Assign"
  input: "^block5_conv2/kernel/Assign"
  input: "^block5_conv3/bias/Adam/Assign"
  input: "^block5_conv3/bias/Adam_1/Assign"
  input: "^block5_conv3/bias/Assign"
  input: "^block5_conv3/kernel/Adam/Assign"
  input: "^block5_conv3/kernel/Adam_1/Assign"
  input: "^block5_conv3/kernel/Assign"
  input: "^dense_1/bias/Adam/Assign"
  input: "^dense_1/bias/Adam_1/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Adam/Assign"
  input: "^dense_1/kernel/Adam_1/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_2/bias/Adam/Assign"
  input: "^dense_2/bias/Adam_1/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/kernel/Adam/Assign"
  input: "^dense_2/kernel/Adam_1/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^dense_3/bias/Adam/Assign"
  input: "^dense_3/bias/Adam_1/Assign"
  input: "^dense_3/bias/Assign"
  input: "^dense_3/kernel/Adam/Assign"
  input: "^dense_3/kernel/Adam_1/Assign"
  input: "^dense_3/kernel/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "dense_3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "dense_3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "accuracy/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "accuracy/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "mean_average_precision/max_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/max_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "mean_average_precision/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_average_precision/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/VarIsInitializedOp_44"
  input: "report_uninitialized_variables/VarIsInitializedOp_45"
  input: "report_uninitialized_variables/VarIsInitializedOp_46"
  input: "report_uninitialized_variables/VarIsInitializedOp_47"
  input: "report_uninitialized_variables/VarIsInitializedOp_48"
  input: "report_uninitialized_variables/VarIsInitializedOp_49"
  input: "report_uninitialized_variables/VarIsInitializedOp_50"
  input: "report_uninitialized_variables/VarIsInitializedOp_51"
  input: "report_uninitialized_variables/VarIsInitializedOp_52"
  input: "report_uninitialized_variables/VarIsInitializedOp_53"
  input: "report_uninitialized_variables/VarIsInitializedOp_54"
  input: "report_uninitialized_variables/VarIsInitializedOp_55"
  input: "report_uninitialized_variables/VarIsInitializedOp_56"
  input: "report_uninitialized_variables/VarIsInitializedOp_57"
  input: "report_uninitialized_variables/VarIsInitializedOp_58"
  input: "report_uninitialized_variables/VarIsInitializedOp_59"
  input: "report_uninitialized_variables/VarIsInitializedOp_60"
  input: "report_uninitialized_variables/VarIsInitializedOp_61"
  input: "report_uninitialized_variables/VarIsInitializedOp_62"
  input: "report_uninitialized_variables/VarIsInitializedOp_63"
  input: "report_uninitialized_variables/VarIsInitializedOp_64"
  input: "report_uninitialized_variables/VarIsInitializedOp_65"
  input: "report_uninitialized_variables/VarIsInitializedOp_66"
  input: "report_uninitialized_variables/VarIsInitializedOp_67"
  input: "report_uninitialized_variables/VarIsInitializedOp_68"
  input: "report_uninitialized_variables/VarIsInitializedOp_69"
  input: "report_uninitialized_variables/VarIsInitializedOp_70"
  input: "report_uninitialized_variables/VarIsInitializedOp_71"
  input: "report_uninitialized_variables/VarIsInitializedOp_72"
  input: "report_uninitialized_variables/VarIsInitializedOp_73"
  input: "report_uninitialized_variables/VarIsInitializedOp_74"
  input: "report_uninitialized_variables/VarIsInitializedOp_75"
  input: "report_uninitialized_variables/VarIsInitializedOp_76"
  input: "report_uninitialized_variables/VarIsInitializedOp_77"
  input: "report_uninitialized_variables/VarIsInitializedOp_78"
  input: "report_uninitialized_variables/VarIsInitializedOp_79"
  input: "report_uninitialized_variables/VarIsInitializedOp_80"
  input: "report_uninitialized_variables/VarIsInitializedOp_81"
  input: "report_uninitialized_variables/VarIsInitializedOp_82"
  input: "report_uninitialized_variables/VarIsInitializedOp_83"
  input: "report_uninitialized_variables/VarIsInitializedOp_84"
  input: "report_uninitialized_variables/VarIsInitializedOp_85"
  input: "report_uninitialized_variables/VarIsInitializedOp_86"
  input: "report_uninitialized_variables/VarIsInitializedOp_87"
  input: "report_uninitialized_variables/VarIsInitializedOp_88"
  input: "report_uninitialized_variables/VarIsInitializedOp_89"
  input: "report_uninitialized_variables/VarIsInitializedOp_90"
  input: "report_uninitialized_variables/VarIsInitializedOp_91"
  input: "report_uninitialized_variables/VarIsInitializedOp_92"
  input: "report_uninitialized_variables/VarIsInitializedOp_93"
  input: "report_uninitialized_variables/VarIsInitializedOp_94"
  input: "report_uninitialized_variables/VarIsInitializedOp_95"
  input: "report_uninitialized_variables/VarIsInitializedOp_96"
  input: "report_uninitialized_variables/VarIsInitializedOp_97"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 103
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 103
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 103
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 103
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 103
          }
        }
        string_val: "global_step"
        string_val: "block1_conv1/kernel"
        string_val: "block1_conv1/bias"
        string_val: "block1_conv2/kernel"
        string_val: "block1_conv2/bias"
        string_val: "block2_conv1/kernel"
        string_val: "block2_conv1/bias"
        string_val: "block2_conv2/kernel"
        string_val: "block2_conv2/bias"
        string_val: "block3_conv1/kernel"
        string_val: "block3_conv1/bias"
        string_val: "block3_conv2/kernel"
        string_val: "block3_conv2/bias"
        string_val: "block3_conv3/kernel"
        string_val: "block3_conv3/bias"
        string_val: "block4_conv1/kernel"
        string_val: "block4_conv1/bias"
        string_val: "block4_conv2/kernel"
        string_val: "block4_conv2/bias"
        string_val: "block4_conv3/kernel"
        string_val: "block4_conv3/bias"
        string_val: "block5_conv1/kernel"
        string_val: "block5_conv1/bias"
        string_val: "block5_conv2/kernel"
        string_val: "block5_conv2/bias"
        string_val: "block5_conv3/kernel"
        string_val: "block5_conv3/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_3/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "block1_conv1/kernel/Adam"
        string_val: "block1_conv1/kernel/Adam_1"
        string_val: "block1_conv1/bias/Adam"
        string_val: "block1_conv1/bias/Adam_1"
        string_val: "block1_conv2/kernel/Adam"
        string_val: "block1_conv2/kernel/Adam_1"
        string_val: "block1_conv2/bias/Adam"
        string_val: "block1_conv2/bias/Adam_1"
        string_val: "block2_conv1/kernel/Adam"
        string_val: "block2_conv1/kernel/Adam_1"
        string_val: "block2_conv1/bias/Adam"
        string_val: "block2_conv1/bias/Adam_1"
        string_val: "block2_conv2/kernel/Adam"
        string_val: "block2_conv2/kernel/Adam_1"
        string_val: "block2_conv2/bias/Adam"
        string_val: "block2_conv2/bias/Adam_1"
        string_val: "block3_conv1/kernel/Adam"
        string_val: "block3_conv1/kernel/Adam_1"
        string_val: "block3_conv1/bias/Adam"
        string_val: "block3_conv1/bias/Adam_1"
        string_val: "block3_conv2/kernel/Adam"
        string_val: "block3_conv2/kernel/Adam_1"
        string_val: "block3_conv2/bias/Adam"
        string_val: "block3_conv2/bias/Adam_1"
        string_val: "block3_conv3/kernel/Adam"
        string_val: "block3_conv3/kernel/Adam_1"
        string_val: "block3_conv3/bias/Adam"
        string_val: "block3_conv3/bias/Adam_1"
        string_val: "block4_conv1/kernel/Adam"
        string_val: "block4_conv1/kernel/Adam_1"
        string_val: "block4_conv1/bias/Adam"
        string_val: "block4_conv1/bias/Adam_1"
        string_val: "block4_conv2/kernel/Adam"
        string_val: "block4_conv2/kernel/Adam_1"
        string_val: "block4_conv2/bias/Adam"
        string_val: "block4_conv2/bias/Adam_1"
        string_val: "block4_conv3/kernel/Adam"
        string_val: "block4_conv3/kernel/Adam_1"
        string_val: "block4_conv3/bias/Adam"
        string_val: "block4_conv3/bias/Adam_1"
        string_val: "block5_conv1/kernel/Adam"
        string_val: "block5_conv1/kernel/Adam_1"
        string_val: "block5_conv1/bias/Adam"
        string_val: "block5_conv1/bias/Adam_1"
        string_val: "block5_conv2/kernel/Adam"
        string_val: "block5_conv2/kernel/Adam_1"
        string_val: "block5_conv2/bias/Adam"
        string_val: "block5_conv2/bias/Adam_1"
        string_val: "block5_conv3/kernel/Adam"
        string_val: "block5_conv3/kernel/Adam_1"
        string_val: "block5_conv3/bias/Adam"
        string_val: "block5_conv3/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_3/kernel/Adam"
        string_val: "dense_3/kernel/Adam_1"
        string_val: "dense_3/bias/Adam"
        string_val: "dense_3/bias/Adam_1"
        string_val: "accuracy/total"
        string_val: "accuracy/count"
        string_val: "mean_average_precision/max_1"
        string_val: "mean_average_precision/total"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 103
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 103
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 103
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 103
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 103
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "dense_3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "dense_3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 99
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 99
          }
        }
        string_val: "global_step"
        string_val: "block1_conv1/kernel"
        string_val: "block1_conv1/bias"
        string_val: "block1_conv2/kernel"
        string_val: "block1_conv2/bias"
        string_val: "block2_conv1/kernel"
        string_val: "block2_conv1/bias"
        string_val: "block2_conv2/kernel"
        string_val: "block2_conv2/bias"
        string_val: "block3_conv1/kernel"
        string_val: "block3_conv1/bias"
        string_val: "block3_conv2/kernel"
        string_val: "block3_conv2/bias"
        string_val: "block3_conv3/kernel"
        string_val: "block3_conv3/bias"
        string_val: "block4_conv1/kernel"
        string_val: "block4_conv1/bias"
        string_val: "block4_conv2/kernel"
        string_val: "block4_conv2/bias"
        string_val: "block4_conv3/kernel"
        string_val: "block4_conv3/bias"
        string_val: "block5_conv1/kernel"
        string_val: "block5_conv1/bias"
        string_val: "block5_conv2/kernel"
        string_val: "block5_conv2/bias"
        string_val: "block5_conv3/kernel"
        string_val: "block5_conv3/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_3/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "block1_conv1/kernel/Adam"
        string_val: "block1_conv1/kernel/Adam_1"
        string_val: "block1_conv1/bias/Adam"
        string_val: "block1_conv1/bias/Adam_1"
        string_val: "block1_conv2/kernel/Adam"
        string_val: "block1_conv2/kernel/Adam_1"
        string_val: "block1_conv2/bias/Adam"
        string_val: "block1_conv2/bias/Adam_1"
        string_val: "block2_conv1/kernel/Adam"
        string_val: "block2_conv1/kernel/Adam_1"
        string_val: "block2_conv1/bias/Adam"
        string_val: "block2_conv1/bias/Adam_1"
        string_val: "block2_conv2/kernel/Adam"
        string_val: "block2_conv2/kernel/Adam_1"
        string_val: "block2_conv2/bias/Adam"
        string_val: "block2_conv2/bias/Adam_1"
        string_val: "block3_conv1/kernel/Adam"
        string_val: "block3_conv1/kernel/Adam_1"
        string_val: "block3_conv1/bias/Adam"
        string_val: "block3_conv1/bias/Adam_1"
        string_val: "block3_conv2/kernel/Adam"
        string_val: "block3_conv2/kernel/Adam_1"
        string_val: "block3_conv2/bias/Adam"
        string_val: "block3_conv2/bias/Adam_1"
        string_val: "block3_conv3/kernel/Adam"
        string_val: "block3_conv3/kernel/Adam_1"
        string_val: "block3_conv3/bias/Adam"
        string_val: "block3_conv3/bias/Adam_1"
        string_val: "block4_conv1/kernel/Adam"
        string_val: "block4_conv1/kernel/Adam_1"
        string_val: "block4_conv1/bias/Adam"
        string_val: "block4_conv1/bias/Adam_1"
        string_val: "block4_conv2/kernel/Adam"
        string_val: "block4_conv2/kernel/Adam_1"
        string_val: "block4_conv2/bias/Adam"
        string_val: "block4_conv2/bias/Adam_1"
        string_val: "block4_conv3/kernel/Adam"
        string_val: "block4_conv3/kernel/Adam_1"
        string_val: "block4_conv3/bias/Adam"
        string_val: "block4_conv3/bias/Adam_1"
        string_val: "block5_conv1/kernel/Adam"
        string_val: "block5_conv1/kernel/Adam_1"
        string_val: "block5_conv1/bias/Adam"
        string_val: "block5_conv1/bias/Adam_1"
        string_val: "block5_conv2/kernel/Adam"
        string_val: "block5_conv2/kernel/Adam_1"
        string_val: "block5_conv2/bias/Adam"
        string_val: "block5_conv2/bias/Adam_1"
        string_val: "block5_conv3/kernel/Adam"
        string_val: "block5_conv3/kernel/Adam_1"
        string_val: "block5_conv3/bias/Adam"
        string_val: "block5_conv3/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_3/kernel/Adam"
        string_val: "dense_3/kernel/Adam_1"
        string_val: "dense_3/bias/Adam"
        string_val: "dense_3/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 99
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 99
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 99
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^accuracy/count/Assign"
  input: "^accuracy/total/Assign"
  input: "^mean_average_precision/max_1/Assign"
  input: "^mean_average_precision/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^class_id_lookup/hash_table/table_init/LookupTableImportV2"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "accuracy_1"
  input: "mean_average_precision_1"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_8c22c592c7674eea9482a92bf82f0bc0/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 99
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "block1_conv1/bias"
        string_val: "block1_conv1/bias/Adam"
        string_val: "block1_conv1/bias/Adam_1"
        string_val: "block1_conv1/kernel"
        string_val: "block1_conv1/kernel/Adam"
        string_val: "block1_conv1/kernel/Adam_1"
        string_val: "block1_conv2/bias"
        string_val: "block1_conv2/bias/Adam"
        string_val: "block1_conv2/bias/Adam_1"
        string_val: "block1_conv2/kernel"
        string_val: "block1_conv2/kernel/Adam"
        string_val: "block1_conv2/kernel/Adam_1"
        string_val: "block2_conv1/bias"
        string_val: "block2_conv1/bias/Adam"
        string_val: "block2_conv1/bias/Adam_1"
        string_val: "block2_conv1/kernel"
        string_val: "block2_conv1/kernel/Adam"
        string_val: "block2_conv1/kernel/Adam_1"
        string_val: "block2_conv2/bias"
        string_val: "block2_conv2/bias/Adam"
        string_val: "block2_conv2/bias/Adam_1"
        string_val: "block2_conv2/kernel"
        string_val: "block2_conv2/kernel/Adam"
        string_val: "block2_conv2/kernel/Adam_1"
        string_val: "block3_conv1/bias"
        string_val: "block3_conv1/bias/Adam"
        string_val: "block3_conv1/bias/Adam_1"
        string_val: "block3_conv1/kernel"
        string_val: "block3_conv1/kernel/Adam"
        string_val: "block3_conv1/kernel/Adam_1"
        string_val: "block3_conv2/bias"
        string_val: "block3_conv2/bias/Adam"
        string_val: "block3_conv2/bias/Adam_1"
        string_val: "block3_conv2/kernel"
        string_val: "block3_conv2/kernel/Adam"
        string_val: "block3_conv2/kernel/Adam_1"
        string_val: "block3_conv3/bias"
        string_val: "block3_conv3/bias/Adam"
        string_val: "block3_conv3/bias/Adam_1"
        string_val: "block3_conv3/kernel"
        string_val: "block3_conv3/kernel/Adam"
        string_val: "block3_conv3/kernel/Adam_1"
        string_val: "block4_conv1/bias"
        string_val: "block4_conv1/bias/Adam"
        string_val: "block4_conv1/bias/Adam_1"
        string_val: "block4_conv1/kernel"
        string_val: "block4_conv1/kernel/Adam"
        string_val: "block4_conv1/kernel/Adam_1"
        string_val: "block4_conv2/bias"
        string_val: "block4_conv2/bias/Adam"
        string_val: "block4_conv2/bias/Adam_1"
        string_val: "block4_conv2/kernel"
        string_val: "block4_conv2/kernel/Adam"
        string_val: "block4_conv2/kernel/Adam_1"
        string_val: "block4_conv3/bias"
        string_val: "block4_conv3/bias/Adam"
        string_val: "block4_conv3/bias/Adam_1"
        string_val: "block4_conv3/kernel"
        string_val: "block4_conv3/kernel/Adam"
        string_val: "block4_conv3/kernel/Adam_1"
        string_val: "block5_conv1/bias"
        string_val: "block5_conv1/bias/Adam"
        string_val: "block5_conv1/bias/Adam_1"
        string_val: "block5_conv1/kernel"
        string_val: "block5_conv1/kernel/Adam"
        string_val: "block5_conv1/kernel/Adam_1"
        string_val: "block5_conv2/bias"
        string_val: "block5_conv2/bias/Adam"
        string_val: "block5_conv2/bias/Adam_1"
        string_val: "block5_conv2/kernel"
        string_val: "block5_conv2/kernel/Adam"
        string_val: "block5_conv2/kernel/Adam_1"
        string_val: "block5_conv3/bias"
        string_val: "block5_conv3/bias/Adam"
        string_val: "block5_conv3/bias/Adam_1"
        string_val: "block5_conv3/kernel"
        string_val: "block5_conv3/kernel/Adam"
        string_val: "block5_conv3/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_3/bias"
        string_val: "dense_3/bias/Adam"
        string_val: "dense_3/bias/Adam_1"
        string_val: "dense_3/kernel"
        string_val: "dense_3/kernel/Adam"
        string_val: "dense_3/kernel/Adam_1"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 99
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "block1_conv1/bias/Read/ReadVariableOp"
  input: "block1_conv1/bias/Adam/Read/ReadVariableOp"
  input: "block1_conv1/bias/Adam_1/Read/ReadVariableOp"
  input: "block1_conv1/kernel/Read/ReadVariableOp"
  input: "block1_conv1/kernel/Adam/Read/ReadVariableOp"
  input: "block1_conv1/kernel/Adam_1/Read/ReadVariableOp"
  input: "block1_conv2/bias/Read/ReadVariableOp"
  input: "block1_conv2/bias/Adam/Read/ReadVariableOp"
  input: "block1_conv2/bias/Adam_1/Read/ReadVariableOp"
  input: "block1_conv2/kernel/Read/ReadVariableOp"
  input: "block1_conv2/kernel/Adam/Read/ReadVariableOp"
  input: "block1_conv2/kernel/Adam_1/Read/ReadVariableOp"
  input: "block2_conv1/bias/Read/ReadVariableOp"
  input: "block2_conv1/bias/Adam/Read/ReadVariableOp"
  input: "block2_conv1/bias/Adam_1/Read/ReadVariableOp"
  input: "block2_conv1/kernel/Read/ReadVariableOp"
  input: "block2_conv1/kernel/Adam/Read/ReadVariableOp"
  input: "block2_conv1/kernel/Adam_1/Read/ReadVariableOp"
  input: "block2_conv2/bias/Read/ReadVariableOp"
  input: "block2_conv2/bias/Adam/Read/ReadVariableOp"
  input: "block2_conv2/bias/Adam_1/Read/ReadVariableOp"
  input: "block2_conv2/kernel/Read/ReadVariableOp"
  input: "block2_conv2/kernel/Adam/Read/ReadVariableOp"
  input: "block2_conv2/kernel/Adam_1/Read/ReadVariableOp"
  input: "block3_conv1/bias/Read/ReadVariableOp"
  input: "block3_conv1/bias/Adam/Read/ReadVariableOp"
  input: "block3_conv1/bias/Adam_1/Read/ReadVariableOp"
  input: "block3_conv1/kernel/Read/ReadVariableOp"
  input: "block3_conv1/kernel/Adam/Read/ReadVariableOp"
  input: "block3_conv1/kernel/Adam_1/Read/ReadVariableOp"
  input: "block3_conv2/bias/Read/ReadVariableOp"
  input: "block3_conv2/bias/Adam/Read/ReadVariableOp"
  input: "block3_conv2/bias/Adam_1/Read/ReadVariableOp"
  input: "block3_conv2/kernel/Read/ReadVariableOp"
  input: "block3_conv2/kernel/Adam/Read/ReadVariableOp"
  input: "block3_conv2/kernel/Adam_1/Read/ReadVariableOp"
  input: "block3_conv3/bias/Read/ReadVariableOp"
  input: "block3_conv3/bias/Adam/Read/ReadVariableOp"
  input: "block3_conv3/bias/Adam_1/Read/ReadVariableOp"
  input: "block3_conv3/kernel/Read/ReadVariableOp"
  input: "block3_conv3/kernel/Adam/Read/ReadVariableOp"
  input: "block3_conv3/kernel/Adam_1/Read/ReadVariableOp"
  input: "block4_conv1/bias/Read/ReadVariableOp"
  input: "block4_conv1/bias/Adam/Read/ReadVariableOp"
  input: "block4_conv1/bias/Adam_1/Read/ReadVariableOp"
  input: "block4_conv1/kernel/Read/ReadVariableOp"
  input: "block4_conv1/kernel/Adam/Read/ReadVariableOp"
  input: "block4_conv1/kernel/Adam_1/Read/ReadVariableOp"
  input: "block4_conv2/bias/Read/ReadVariableOp"
  input: "block4_conv2/bias/Adam/Read/ReadVariableOp"
  input: "block4_conv2/bias/Adam_1/Read/ReadVariableOp"
  input: "block4_conv2/kernel/Read/ReadVariableOp"
  input: "block4_conv2/kernel/Adam/Read/ReadVariableOp"
  input: "block4_conv2/kernel/Adam_1/Read/ReadVariableOp"
  input: "block4_conv3/bias/Read/ReadVariableOp"
  input: "block4_conv3/bias/Adam/Read/ReadVariableOp"
  input: "block4_conv3/bias/Adam_1/Read/ReadVariableOp"
  input: "block4_conv3/kernel/Read/ReadVariableOp"
  input: "block4_conv3/kernel/Adam/Read/ReadVariableOp"
  input: "block4_conv3/kernel/Adam_1/Read/ReadVariableOp"
  input: "block5_conv1/bias/Read/ReadVariableOp"
  input: "block5_conv1/bias/Adam/Read/ReadVariableOp"
  input: "block5_conv1/bias/Adam_1/Read/ReadVariableOp"
  input: "block5_conv1/kernel/Read/ReadVariableOp"
  input: "block5_conv1/kernel/Adam/Read/ReadVariableOp"
  input: "block5_conv1/kernel/Adam_1/Read/ReadVariableOp"
  input: "block5_conv2/bias/Read/ReadVariableOp"
  input: "block5_conv2/bias/Adam/Read/ReadVariableOp"
  input: "block5_conv2/bias/Adam_1/Read/ReadVariableOp"
  input: "block5_conv2/kernel/Read/ReadVariableOp"
  input: "block5_conv2/kernel/Adam/Read/ReadVariableOp"
  input: "block5_conv2/kernel/Adam_1/Read/ReadVariableOp"
  input: "block5_conv3/bias/Read/ReadVariableOp"
  input: "block5_conv3/bias/Adam/Read/ReadVariableOp"
  input: "block5_conv3/bias/Adam_1/Read/ReadVariableOp"
  input: "block5_conv3/kernel/Read/ReadVariableOp"
  input: "block5_conv3/kernel/Adam/Read/ReadVariableOp"
  input: "block5_conv3/kernel/Adam_1/Read/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/bias/Adam/Read/ReadVariableOp"
  input: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_1/kernel/Adam/Read/ReadVariableOp"
  input: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/bias/Adam/Read/ReadVariableOp"
  input: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_2/kernel/Adam/Read/ReadVariableOp"
  input: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  input: "dense_3/bias/Read/ReadVariableOp"
  input: "dense_3/bias/Adam/Read/ReadVariableOp"
  input: "dense_3/bias/Adam_1/Read/ReadVariableOp"
  input: "dense_3/kernel/Read/ReadVariableOp"
  input: "dense_3/kernel/Adam/Read/ReadVariableOp"
  input: "dense_3/kernel/Adam_1/Read/ReadVariableOp"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 99
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "block1_conv1/bias"
        string_val: "block1_conv1/bias/Adam"
        string_val: "block1_conv1/bias/Adam_1"
        string_val: "block1_conv1/kernel"
        string_val: "block1_conv1/kernel/Adam"
        string_val: "block1_conv1/kernel/Adam_1"
        string_val: "block1_conv2/bias"
        string_val: "block1_conv2/bias/Adam"
        string_val: "block1_conv2/bias/Adam_1"
        string_val: "block1_conv2/kernel"
        string_val: "block1_conv2/kernel/Adam"
        string_val: "block1_conv2/kernel/Adam_1"
        string_val: "block2_conv1/bias"
        string_val: "block2_conv1/bias/Adam"
        string_val: "block2_conv1/bias/Adam_1"
        string_val: "block2_conv1/kernel"
        string_val: "block2_conv1/kernel/Adam"
        string_val: "block2_conv1/kernel/Adam_1"
        string_val: "block2_conv2/bias"
        string_val: "block2_conv2/bias/Adam"
        string_val: "block2_conv2/bias/Adam_1"
        string_val: "block2_conv2/kernel"
        string_val: "block2_conv2/kernel/Adam"
        string_val: "block2_conv2/kernel/Adam_1"
        string_val: "block3_conv1/bias"
        string_val: "block3_conv1/bias/Adam"
        string_val: "block3_conv1/bias/Adam_1"
        string_val: "block3_conv1/kernel"
        string_val: "block3_conv1/kernel/Adam"
        string_val: "block3_conv1/kernel/Adam_1"
        string_val: "block3_conv2/bias"
        string_val: "block3_conv2/bias/Adam"
        string_val: "block3_conv2/bias/Adam_1"
        string_val: "block3_conv2/kernel"
        string_val: "block3_conv2/kernel/Adam"
        string_val: "block3_conv2/kernel/Adam_1"
        string_val: "block3_conv3/bias"
        string_val: "block3_conv3/bias/Adam"
        string_val: "block3_conv3/bias/Adam_1"
        string_val: "block3_conv3/kernel"
        string_val: "block3_conv3/kernel/Adam"
        string_val: "block3_conv3/kernel/Adam_1"
        string_val: "block4_conv1/bias"
        string_val: "block4_conv1/bias/Adam"
        string_val: "block4_conv1/bias/Adam_1"
        string_val: "block4_conv1/kernel"
        string_val: "block4_conv1/kernel/Adam"
        string_val: "block4_conv1/kernel/Adam_1"
        string_val: "block4_conv2/bias"
        string_val: "block4_conv2/bias/Adam"
        string_val: "block4_conv2/bias/Adam_1"
        string_val: "block4_conv2/kernel"
        string_val: "block4_conv2/kernel/Adam"
        string_val: "block4_conv2/kernel/Adam_1"
        string_val: "block4_conv3/bias"
        string_val: "block4_conv3/bias/Adam"
        string_val: "block4_conv3/bias/Adam_1"
        string_val: "block4_conv3/kernel"
        string_val: "block4_conv3/kernel/Adam"
        string_val: "block4_conv3/kernel/Adam_1"
        string_val: "block5_conv1/bias"
        string_val: "block5_conv1/bias/Adam"
        string_val: "block5_conv1/bias/Adam_1"
        string_val: "block5_conv1/kernel"
        string_val: "block5_conv1/kernel/Adam"
        string_val: "block5_conv1/kernel/Adam_1"
        string_val: "block5_conv2/bias"
        string_val: "block5_conv2/bias/Adam"
        string_val: "block5_conv2/bias/Adam_1"
        string_val: "block5_conv2/kernel"
        string_val: "block5_conv2/kernel/Adam"
        string_val: "block5_conv2/kernel/Adam_1"
        string_val: "block5_conv3/bias"
        string_val: "block5_conv3/bias/Adam"
        string_val: "block5_conv3/bias/Adam_1"
        string_val: "block5_conv3/kernel"
        string_val: "block5_conv3/kernel/Adam"
        string_val: "block5_conv3/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_3/bias"
        string_val: "dense_3/bias/Adam"
        string_val: "dense_3/bias/Adam_1"
        string_val: "dense_3/kernel"
        string_val: "dense_3/kernel/Adam"
        string_val: "dense_3/kernel/Adam_1"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 99
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 99
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "block1_conv1/bias"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "block1_conv1/bias/Adam"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "block1_conv1/bias/Adam_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel/Adam"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel/Adam_1"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "block1_conv2/bias"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "block1_conv2/bias/Adam"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "block1_conv2/bias/Adam_1"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel/Adam"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel/Adam_1"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "block2_conv1/bias"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "block2_conv1/bias/Adam"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "block2_conv1/bias/Adam_1"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel/Adam"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel/Adam_1"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "block2_conv2/bias"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "block2_conv2/bias/Adam"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "block2_conv2/bias/Adam_1"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel/Adam"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel/Adam_1"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "block3_conv1/bias"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "block3_conv1/bias/Adam"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "block3_conv1/bias/Adam_1"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel/Adam"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel/Adam_1"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "block3_conv2/bias"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "block3_conv2/bias/Adam"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "block3_conv2/bias/Adam_1"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel/Adam"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel/Adam_1"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "block3_conv3/bias"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "block3_conv3/bias/Adam"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "block3_conv3/bias/Adam_1"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel/Adam"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel/Adam_1"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "block4_conv1/bias"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "block4_conv1/bias/Adam"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "block4_conv1/bias/Adam_1"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel/Adam"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel/Adam_1"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "block4_conv2/bias"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "block4_conv2/bias/Adam"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "block4_conv2/bias/Adam_1"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel/Adam"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel/Adam_1"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "block4_conv3/bias"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "block4_conv3/bias/Adam"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "block4_conv3/bias/Adam_1"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel/Adam"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel/Adam_1"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "block5_conv1/bias"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "block5_conv1/bias/Adam"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "block5_conv1/bias/Adam_1"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel/Adam"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel/Adam_1"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "block5_conv2/bias"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "block5_conv2/bias/Adam"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "block5_conv2/bias/Adam_1"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel/Adam"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel/Adam_1"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "block5_conv3/bias"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "block5_conv3/bias/Adam"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "block5_conv3/bias/Adam_1"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel/Adam"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel/Adam_1"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "dense_3/bias/Adam"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "dense_3/bias/Adam_1"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "dense_3/kernel/Adam"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "dense_3/kernel/Adam_1"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "__inference_Dataset_map_Image._parse_function_42"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      input_arg {
        name: "args_1"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_STRING
      }
    }
    node_def {
      name: "ReadFile"
      op: "ReadFile"
      input: "args_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "DecodeJpeg"
      op: "DecodeJpeg"
      input: "ReadFile:contents:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "acceptable_fraction"
        value {
          f: 1.0
        }
      }
      attr {
        key: "channels"
        value {
          i: 0
        }
      }
      attr {
        key: "dct_method"
        value {
          s: ""
        }
      }
      attr {
        key: "fancy_upscaling"
        value {
          b: true
        }
      }
      attr {
        key: "ratio"
        value {
          i: 1
        }
      }
      attr {
        key: "try_recover_truncated"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "DecodeJpeg:image:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "resize/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "resize/ExpandDims"
      op: "ExpandDims"
      input: "Cast:y:0"
      input: "resize/ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "resize/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "resize/ResizeBilinear"
      op: "ResizeBilinear"
      input: "resize/ExpandDims:output:0"
      input: "resize/size:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "align_corners"
        value {
          b: false
        }
      }
      attr {
        key: "half_pixel_centers"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "resize/Squeeze"
      op: "Squeeze"
      input: "resize/ResizeBilinear:resized_images:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "resize/Squeeze:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "args_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_1"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map_Image._parse_augmentation_options_49"
      input_arg {
        name: "args_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "args_1"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_STRING
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "args_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "args_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
            dim {
              size: -1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_1"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map_Image._norm_function_58"
      input_arg {
        name: "args_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "args_1"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_STRING
      }
    }
    node_def {
      name: "truediv/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "truediv"
      op: "RealDiv"
      input: "args_0"
      input: "truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "args_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
            dim {
              size: -1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_1"
          }
        }
      }
    }
  }
}
versions {
  producer: 134
  min_consumer: 12
}
